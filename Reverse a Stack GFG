Approach : Recursion
  1 : Pop all the element , then pushAtBottom 

TimeComplexity: O(n)
SpaceComplexity : O(1)


// User function Template for Java

class Solution {
    static void reverse(Stack<Integer> s) {
        if(s.isEmpty()){
            return;
        }
        int top = s.pop();
        reverse(s);
        pushAtBottom(s,top);
       
    }
    public static void pushAtBottom(Stack<Integer>s , int data){
        if(s.isEmpty()){
            s.push(data);
            return;
        }
        int top = s.pop();
        pushAtBottom(s, data);
        s.push(top);
    }
}
